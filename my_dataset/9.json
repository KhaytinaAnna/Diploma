{
  "problem_id": 9,
  "problem": "valid_date",
  "method": "def valid_date(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n    for example: \n    valid_date('03-11-2000') => True\n    valid_date('15-01-2012') => False\n    valid_date('04-0-2040') => False\n    valid_date('06-04-2020') => True\n    valid_date('06/04/2020') => False\n    \"\"\"\n    try:\n        date = date.strip()\n        month, day, year = date.split('-')\n        month, day, year = int(month), int(day), int(year)\n        if month < 1 or month > 12:\n            return False\n        if month in [1,3,5,7,8,10,12] and day < 1 or day > 31:\n            return False\n        if month in [4,6,9,11] and day < 1 or day > 30:\n            return False\n        if month == 2 and day < 1 or day > 29:\n            return False\n    except:\n        return False\n    return True",
  "tests": [
    {
      "test": "def test():\n        assert valid_date('06-06-2005') == True",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        "!",
        "!",
        ">"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('04-2003') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        ">",
        ">",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('04-31-3000') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('21-31-2000') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('2003-04-12') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('2003-04') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        ">",
        ">",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('04-12-2003') == True",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        "!",
        "!",
        ">"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        ">",
        ">",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('03-32-2011') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('15-01-2012') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('06-04-2020') == True",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        "!",
        "!",
        ">"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('01-01-2007') == True",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        "!",
        "!",
        ">"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('04-0-2040') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('04122003') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        ">",
        ">",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('20030412') == False",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        "!",
        ">",
        ">",
        "!"
      ]
    },
    {
      "test": "def test():\n        assert valid_date('03-11-2000') == True",
      "coverage_sequence": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        ">",
        "!",
        "!",
        "!",
        ">"
      ]
    }
  ]
}
